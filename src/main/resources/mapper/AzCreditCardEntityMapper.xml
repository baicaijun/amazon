<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.modeush.amazon.dao.AzCreditCardEntityMapper" >
  <resultMap id="BaseResultMap" type="com.modeush.amazon.entity.AzCreditCardEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="DECIMAL" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="cvv" property="cvv" jdbcType="DECIMAL" />
    <result column="exp" property="exp" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, name, number, password, cvv, exp, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from az_credit_card
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from az_credit_card
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.modeush.amazon.entity.AzCreditCardEntity" >
    insert into az_credit_card (id, type, name, 
      number, password, cvv, 
      exp, status)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{cvv,jdbcType=DECIMAL}, 
      #{exp,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.modeush.amazon.entity.AzCreditCardEntity" >
    insert into az_credit_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="cvv != null" >
        cvv,
      </if>
      <if test="exp != null" >
        exp,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="cvv != null" >
        #{cvv,jdbcType=DECIMAL},
      </if>
      <if test="exp != null" >
        #{exp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.modeush.amazon.entity.AzCreditCardEntity" >
    update az_credit_card
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="cvv != null" >
        cvv = #{cvv,jdbcType=DECIMAL},
      </if>
      <if test="exp != null" >
        exp = #{exp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.modeush.amazon.entity.AzCreditCardEntity" >
    update az_credit_card
    set type = #{type,jdbcType=DECIMAL},
      name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      cvv = #{cvv,jdbcType=DECIMAL},
      exp = #{exp,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>